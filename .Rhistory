devtools::install_github("henrifnk/FuzzyDBScan")
library(FuzzyDBSCAN)
cl = FuzzyDBScan$new(factoextra::multishapes[, 1:2], c(0,0.15), c(4,10))
cl$plot()
cl$plot("x", "y")
cl = FuzzyDBScan$new(factoextra::multishapes[, 1:2], c(0,0.15), c(3,15))
cl$plot("x", "y")
cl = FuzzyDBScan$new(factoextra::multishapes[, 1:2], c(0,0.2), c(3,15))
cl$plot("x", "y")
cl = FuzzyDBScan$new(factoextra::multishapes[, 1:2], c(0,0.2), c(3,15))
library(FuzzyDBSCAN)
cl = FuzzyDBScan$new(factoextra::multishapes[, 1:2], c(0,0.2), c(3,15))
cl$plot("x", "y")
?FuzzyDBScan
x <- seq(min(dta$x), max(dta$x), length.out = 50)
x <- seq(min(factoextra::multishapes[, 1:2]$x), max(factoextra::multishapes[, 1:2]$x), length.out = 50)
y <- seq(min(factoextra::multishapes[, 1:2]$y), max(factoextra::multishapes[, 1:2]$y), length.out = 50)
p_dta = expand.grid(x = x, y = y)
# predict on test data and plot results
p = cl$predict(p_dta, FALSE)
ggplot(p, aes(x = p_dta[, 1], y = p_dta[, 2], colour = as.factor(cluster))) +
geom_point(alpha = p$dense)
library(ggplot2)
x <- seq(min(factoextra::multishapes[, 1:2]$x), max(factoextra::multishapes[, 1:2]$x), length.out = 50)
y <- seq(min(factoextra::multishapes[, 1:2]$y), max(factoextra::multishapes[, 1:2]$y), length.out = 50)
p_dta = expand.grid(x = x, y = y)
# predict on test data and plot results
p = cl$predict(p_dta, FALSE)
ggplot(p, aes(x = p_dta[, 1], y = p_dta[, 2], colour = as.factor(cluster))) +
geom_point(alpha = p$dense)
library(ggplot2)
x <- seq(min(factoextra::multishapes[, 1:2]$x), max(factoextra::multishapes[, 1:2]$x), length.out = 50)
y <- seq(min(factoextra::multishapes[, 1:2]$y), max(factoextra::multishapes[, 1:2]$y), length.out = 50)
p_dta = expand.grid(x = x, y = y)
# predict on test data and plot results
p = cl$predict(p_dta, FALSE)
ggplot(p, aes(x = p_dta[, 1], y = p_dta[, 2], colour = as.factor(cluster))) +
geom_point(alpha = p$dense, size = 4)
exp(0.07)
usethis::use_readme_rmd()
library(FuzzyDBSCAN)
?FuzzyDBScan
library(factoextra)
dta = multishapes[, 1:2]
eps = c(0, 0.2)
pts = c(3, 15)
cl = FuzzyDBScan$new(dta, eps, pts)
cl$plot("x", "y")
x <- seq(min(dta$x), max(dta$x), length.out = 50)
y <- seq(min(dta$y), max(dta$y), length.out = 50)
p_dta = expand.grid(x = x, y = y)
p =predict(ck, p_data, FALSE)
p =predict(cl, p_data, FALSE)
p = cl$predict(p_dta, FALSE)
library(FuzzyDBScan)
cl = FuzzyDBScan$new(dta, eps, pts)
cl = FuzzyDBScan$new(dta, eps, pts)
cl = FuzzyDBScan$new(dta, eps, pts)
cl$plot("x", "y")
# install.packages("devtools")
devtools::install_github("henrifnk/FuzzyDBScan")
library(factoextra)
dta = multishapes[, 1:2]
eps = c(0, 0.2)
pts = c(3, 15)
cl = FuzzyDBScan$new(dta, eps, pts)
cl$plot("x", "y")
devtools::release()
devtools::spell_check()
devtools::spell_check()
devtools::release()
devtools::release()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::release()
check_win_devel()
devtools::check_win_devel()
check_win_devel()
devtools::release()
news()
news("initial release")
# iml 0.0.1
devtools::release()
r = rhub::check_for_cran()
r$summary
r
r$cran_summary()
usethis::use_travis()
usethis::use_coverage()
usethis::use_cran_comments()
r$cran_summary()
r
devtools::release()
devtools::release()
